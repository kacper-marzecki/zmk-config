#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>


#define lmain 0
#define lbase 1
#define lexp 2
#define lexp1 3
#define lgaming 4
#define lsymbols 5
#define lnav 6
#define lsystem 7

#define LN1 0 
#define LN2 1 
#define LN3 2 
#define LN4 3 
#define LN5 4 
#define LN6 5 


#define JU 6 

#define RN1 7 
#define RN2 8 
#define RN3 9 
#define RN4 10 
#define RN5 11 
#define RN6 12 

#define LT1 13 
#define LT2 14 
#define LT3 15 
#define LT4 16 
#define LT5 17 
#define LT6 18 


#define JD 19 

#define RT1 20 
#define RT2 20 
#define RT3 21 
#define RT4 22 
#define RT5 23 
#define RT6 24 


#define LM1 25 
#define LM2 26 
#define LM3 27 
#define LM4 28 
#define LM5 29 
#define LM6 30 


#define JL 31 

#define RM1 32 
#define RM2 33 
#define RM3 34 
#define RM4 35 
#define RM5 36 
#define RM6 37 


#define LB1 38 
#define LB2 39 
#define LB3 40 
#define LB4 41 
#define LB5 42 
#define LB6 43 

#define JR 44 

#define RB1 45 
#define RB2 46 
#define RB3 47 
#define RB4 48 
#define RB5 49 
#define RB6 50 


#define LH1 51 
#define LH2 52 
#define LH3 53 
#define LH4 54 
#define LH5 55 
#define LH6 56 

#define JC 57 

#define RH1 58 
#define RH2 59 
#define RH3 60 
#define RH4 61 
#define RH5 62 




// Left side
#define LHMS LSHFT
#define LHMG LGUI
#define LHRA LALT
#define LHRC LCTRL

// Right side
#define RHMS RSHFT
#define RHMG RGUI
#define RHMA RALT
#define RHMC RCTRL
// This is a helper macro to allow me to define all home-row modifier without
// having to type all the boilerplate configuration.
#define DEFINE_HRM(_label, _name, _hold, _tap, _triggers, ...)  \
    _label: _name {                                             \
      compatible = "zmk,behavior-hold-tap";                     \
      #binding-cells = <2>;                                     \
      flavor = "balanced";                                      \
      tapping-term-ms = <200>;                                  \
      quick-tap-ms = <175>;                                     \
      bindings = <_hold>, <_tap>;                               \
      hold-trigger-key-positions = <_triggers>;                 \
      hold-trigger-on-release;                                  \
      __VA_ARGS__                                               \
    }


&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};
#define idx(_col, _row) \
  _row * 12 + _col


&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};
#define TAP_DANCE(name, bindings) \
  td_##name: td_##name { \
    compatible = "zmk,behavior-tap-dance"; \
    #binding-cells = <0>; \
    tapping-term-ms = <200>; \
    bindings = <bindings>; \
  };

/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };
    behaviors {
      hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < RM1 RM2 RM3 RM4 RM5 RH1 RH2 RH3 LH3 LH4 LH5 LH6 >  ;

            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < LM2 LM3 LM4 LM5 LH1 LH2 LH3 LH4 LH5 LH6 >; 
            hold-trigger-on-release;
        };

        
        tmo: tap_mo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&mo>;
            hold-trigger-on-release;
        };
        // Use the macro to define your tap-dance behaviors
        /* TAP_DANCE(numbers, &kp N1 &kp N2 &kp N3) */
        /* TAP_DANCE(media, &kp C_PLAY_PAUSE &kp C_NEXT &kp C_PREV) */


    /* DEFINE_HRM(hml, home_row_mod_left, &kp, &kp, KEYS_R THUMBS, */
    /*   require-prior-idle-ms = <100>; */
    /* ); */
    /* DEFINE_HRM(hmr, home_row_mod_right, &kp, &kp, KEYS_L THUMBS, */
    /*   require-prior-idle-ms = <100>; */
    /* ); */
    /**/
    /* // Then, we have to define a behavior like the one before, but for the shift */
    /* // key, which means we cannot use the `require-prior-idle-ms` property */
    /* DEFINE_HRM(hsl, home_row_mod_for_shift_left, &kp, &kp, KEYS_R THUMBS); */
    /* DEFINE_HRM(hsr, home_row_mod_for_shift_right, &kp, &kp, KEYS_L THUMBS); */
    /**/
    /* // Lastly, we need a home-row mod type of behavior that work with layers */
    /* DEFINE_HRM(hll, home_row_layer_mod_left, &mo, &kp, KEYS_R THUMBS LB3 LB2 LB1); */
    /* DEFINE_HRM(hlr, home_row_layer_mod_right, &mo, &kp, KEYS_L THUMBS RB3 RB2 RB1); */
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&kp ESC        &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3       &kp NUMBER_4      &kp NUMBER_5       &kp F3     &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8      &kp NUMBER_9             &kp NUMBER_0              &kp BACKSPACE
&kp TAB        &kp Q         &kp W           &kp E              &kp R             &kp T              &kp F4     &kp Y         &kp U           &kp I             &kp O                    &kp P                     &kp BSLH
&kp LSHIFT     &kp A         &kp S           &kp D              &kp F             &kp G              &kp F5     &kp H         &kp J           &kp K             &kp L                    &kp SEMI                  &kp RSHIFT
&kp LCTRL      &kp Z         &kp X           &kp C              &kp V             &kp B              &kp F6     &kp N         &kp M           &kp COMMA         &kp DOT                  &kp FSLH                  &kp ENTER
&to lbase     &kp F1        &kp LEFT_GUI    &kp LEFT_ALT       &kp SPACE         &kp F2             &kp F7     &kp F8        &kp F9          &kp RIGHT_ALT     &kp RGUI                 &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "main";
        };


        base {
            bindings = <
&kp ESC     &mt EXCL N1  &mt AT N2     &mt HASH NUMBER_3  &mt DOLLAR N4     &mt PERCENT N5     &kp UP_ARROW        &mt CARET N6  &mt AMPS N7     &mt ASTRK N8      &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp BACKSPACE
&kp TAB     &kp Q        &kp W         &kp E              &kp R             &kp T              &kp DOWN_ARROW      &kp Y         &kp U           &kp I             &kp O                    &kp P                     &kp BSLH
&sk LSHFT   &kp A        &kp S         &kp D              &kp F             &kp G              &kp LEFT_ARROW      &kp H         &kp J           &kp K             &kp L                    &kp SEMI                  &kp ESC
&kp LCTRL   &kp Z        &kp X         &kp C              &kp V             &kp B              &kp RIGHT_ARROW     &kp N         &kp M           &kp COMMA         &kp DOT                  &kp FSLH                  &kp ENTER
&to lmain  &kp LCTRL    &kp LEFT_GUI  &kp LEFT_ALT       &mt LSHFT SPACE   &sl lsymbols       &kp ENTER           &mo lnav      &kp SPACE       &kp RIGHT_ALT     &kp RIGHT_SHIFT          &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "base";
        };

        
        exp {
            bindings = <
&kp ESC     &mt EXCL N1    &mt AT N2     &mt HASH NUMBER_3  &mt DOLLAR N4     &mt PERCENT N5     &kp UP_ARROW        &mt CARET N6  &mt AMPS N7     &mt ASTRK N8      &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp BACKSPACE
&kp TAB     &kp Q          &kp W         &kp E              &kp R             &kp T              &kp DOWN_ARROW      &kp Y         &kp U           &kp I             &kp O                    &kp P                     &kp BSLH
&sk LSHFT   &hml LSHIFT A  &hml LALT S   &hml LCTRL D       &hml LGUI F       &kp G              &kp LEFT_ARROW      &kp H         &hmr RGUI J     &hmr RCTRL K      &hmr RALT L              &hmr RSHIFT SEMI          &kp ESC
&kp LCTRL   &kp Z          &kp X         &kp C              &kp V             &kp B              &kp RIGHT_ARROW     &kp N         &kp M           &kp COMMA         &kp DOT                  &kp FSLH                  &kp ENTER
&to lbase   &kp LCTRL      &kp LEFT_GUI  &kp ESC            &hml LSHFT SPACE  &kp TAB            &kp ENTER           &mo lsymbols  &mo lnav        &kp RIGHT_ALT     &kp RIGHT_SHIFT          &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "exp";
        };


        exp1 {
            bindings = <
&kp ESC     &mt EXCL N1    &mt AT N2     &mt HASH NUMBER_3  &mt DOLLAR N4     &mt PERCENT N5     &kp UP_ARROW        &mt CARET N6  &mt AMPS N7     &mt ASTRK N8      &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp BACKSPACE
&kp TAB     &kp V          &kp M         &kp L              &kp C             &kp P              &kp DOWN_ARROW      &kp X         &kp F           &kp O             &kp U                    &kp J                     &kp BSLH
&sk LSHFT   &hml LSHIFT S  &hml LALT T   &hml LCTRL R       &hml LGUI D       &kp Y              &kp LEFT_ARROW      &kp DOT       &hmr RGUI N     &hmr RCTRL A      &hmr RALT E              &hmr RSHIFT I              &kp ESC
&kp LCTRL   &kp Z          &kp K         &kp Q              &kp G             &kp W              &kp RIGHT_ARROW     &kp B         &kp H           &kp  SQT          &kp SEMI                 &kp COMMA                  &kp ENTER
&to lbase   &kp LCTRL      &kp LEFT_GUI  &kp ESC            &hml LSHFT SPACE  &kp TAB            &kp ENTER           &mo lsymbols  &mo lnav        &kp RIGHT_ALT     &kp RIGHT_SHIFT          &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "exp1";
        };

          gaming {
            bindings = <
&kp ESC     &mt EXCL N1  &mt AT N2     &mt HASH NUMBER_3  &mt DOLLAR N4  &mt PERCENT N5     &kp UP_ARROW        &mt CARET N6  &mt AMPS N7     &mt ASTRK N8      &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp BACKSPACE
&kp TAB     &kp Q        &kp W         &kp E              &kp R          &kp T              &kp DOWN_ARROW      &kp Y         &kp U           &kp I             &kp O                    &kp P                     &kp BSLH
&kt LSHFT   &kp A        &kp S         &kp D              &kp F          &kp G              &kp LEFT_ARROW      &kp H         &kp J           &kp K             &kp L                    &kp SEMI                  &kp ESC
&kp LCTRL   &kp Z        &kp X         &kp C              &kp V          &kp B              &kp RIGHT_ARROW     &kp N         &kp M           &kp COMMA         &kp DOT                  &kp FSLH                  &kp ENTER
&kp C_MUTE  &kp LCTRL    &kp LEFT_ALT  &kp LEFT_ALT       &kp SPACE      &sl lsymbols       &kp ENTER           &tog lgaming  &kp SPACE       &kp RIGHT_ALT     &kp RIGHT_SHIFT          &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "gaming";
        };



        
        symbols {
            bindings = <
&trans  &trans     &trans     &trans            &trans             &trans           &trans          &trans       &trans       &trans    &trans  &trans  &trans
&trans  &kp MINUS  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL        &trans          &kp LT       &kp PIPE     &kp GT    &kp SQT &trans  &trans
&trans  &kp PLUS   &kp TILDE  &kp LEFT_BRACE    &kp LEFT_BRACE     &kp UNDER        &trans          &kp MINUS    &kp COLON    &kp FSLH  &kp DQT &trans  &trans
&trans  &trans     &trans     &kp LEFT_BRACKET  &kp LEFT_BRACKET   &trans           &trans          &trans       &trans       &trans    &trans  &trans  &trans
&trans  &trans     &trans     &trans            &trans             &trans           &trans          &mo lsystem  &mo lsystem  &trans    &trans  &trans
            >;
            sensor-bindings = <&scroll_encoder>;
            display-name = "symbols";
        };

        nav {
            bindings = <
&none       &none            &none           &none            &none            &none                   &mmv MOVE_UP         &none            &none            &none       &none      &none          &none
&none       &none            &none           &mmv MOVE_UP     &none            &none                   &mmv MOVE_DOWN       &kp LC(U)        &kp HOME         &kp UP      &kp END    &none          &none
&none       &none            &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &none                   &mmv MOVE_LEFT       &kp LC(D)        &kp LEFT         &kp DOWN    &kp RIGHT  &kp PAGE_UP    &none
&none       &none            &mkp LCLK       &mkp MCLK        &mkp RCLK        &none                   &mmv MOVE_LEFT       &kp B            &kp W            &none       &none      &kp PAGE_DOWN  &none
&kp C_MUTE  &none            &none           &none            &kp BACKSPACE    &trans                  &mkp LCLK            &mo lsystem      &kp K_COPY       &kp K_PASTE &none      &none 
            >;

            display-name = "nav";
            sensor-bindings = <&scroll_encoder>;
        };

        system {
            bindings = <
&sys_reset      &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4              &mmv MOVE_UP           &kp F1  &kp F2         &kp F3    &kp F4     &kp F5    &kp F6 
&soft_off       &out OUT_BLE     &bt BT_CLR      &bt BT_CLR_ALL   &none            &none                     &mmv MOVE_DOWN         &kp F7  &kp F8         &kp F9    &kp F10    &kp F11   &kp F12
&bootloader     &out OUT_USB     &none           &none            &none            &none                     &mmv MOVE_LEFT         &none   &none          &none     &none      &none     &none
&none           &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI           &mmv MOVE_RIGHT        &none   &none          &none     &none      &none     &none 
&none           &rgb_ug RGB_BRI  &rgb_ug RGB_BRD &trans           &trans           &trans                    &mkp LCLK              &none   &none          &to lexp  &to lexp1  &tog lgaming  
            >;

            display-name = "system";
            sensor-bindings = <&scroll_encoder>;
        };
    };

};
